import{o as G}from"./index.b6706f12.js";import{e as T}from"./ensure-attributes.2c659353.js";import"./modulepreload-polyfill.b7f2da20.js";let v;function A(a){if(window.GGBApplet)return Promise.resolve(window.GGBApplet);if(v)return v;{const l=document.createElement("script");if(v=new Promise((t,i)=>{l.onload=()=>t(window.GGBApplet),l.onerror=()=>{v=void 0,i()}}),a){const t=a.lastIndexOf("GeoGebra")+8;l.src=a.slice(0,t)+"/deployggb.js"}else l.src="https://www.geogebra.org/apps/deployggb.js";return document.head.appendChild(l),v}}const j={appName:"classic",showMenuBar:!0,showAlgebraInput:!0,showToolBar:!0,customToolBar:"0 39 73 62 | 1 501 67 , 5 19 , 72 75 76 | 2 15 45 , 18 65 , 7 37 | 4 3 8 9 , 13 44 , 58 , 47 | 16 51 64 , 70 | 10 34 53 11 , 24  20 22 , 21 23 | 55 56 57 , 12 | 36 46 , 38 49  50 , 71  14  68 | 30 29 54 32 31 33 | 25 17 26 60 52 61 | 40 41 42 , 27 28 35 , 6",showToolBarHelp:!1,showResetIcon:!1,enableFileFeatures:!1,enableLabelDrags:!1,enableShiftDragZoom:!0,enableRightClick:!0,errorDialogsActive:!1,allowStyleBar:!1,preventFocus:!1,useBrowserForJS:!0,language:"en",borderColor:"transparent"},L=class{constructor(a){var l;this.currentAnimations=[],this.embeds={},this.storageCallback=0,this.initAllEmbeds=()=>{for(const t of this.api.getAllObjectNames("embed"))this.initEmbed(t)},this.objectsInWaiting=[],this.updateCallback=0,this.dispatchUpdates=()=>{this.updateCallback||(this.updateCallback=setTimeout(this._dispatchUpdates,this.delay))},this._dispatchUpdates=()=>{const{objectsInWaiting:t}=this;this.objectsInWaiting=[];for(const i of t){const e=this.api.getEmbeddedCalculators(!0),s=e==null?void 0:e[i];s!=null&&s.controller&&this.sendEvent("evalGMContent",s.toJSON(),i);const r=this.api.getCommandString(i,!1);if(r){this.sendEvent("evalCommand",`${i} := ${r}`,i);const n=this.api.getObjectsOfItsGroup(i);n!=null&&n.length&&this.sendEvent("addToGroup",i,n)}if(!r||this.api.isMoveable(i)){const n=this.api.getXML(i);this.sendEvent("evalXML",n,i)}this.sendEvent("select",i,!0)}this.updateCallback=0},this.updateListener=t=>{(this.api.hasUnlabeledPredecessors(t)||this.api.isMoveable(t))&&!this.currentAnimations.includes(t)&&(this.objectsInWaiting.includes(t)||(this.objectsInWaiting.push(t),this.dispatchUpdates()))},this.addListener=t=>{const i=this.api.getImageFileName(t);if(i){const n=this.api.getFileJSON();for(const h of n.archive)h.fileName.includes(i)&&this.sendEvent("addImage",JSON.stringify(h))}const e=this.api.getXML(t),r=this.api.getCommandString(t)&&this.api.getAlgorithmXML(t);this.sendEvent("addObject",r||e,t),this.sendEvent("deselect"),this.sendEvent("select",t,!0),setTimeout(()=>this.initEmbed(t),500)},this.removeListener=t=>{this.sendEvent("deleteObject",t),delete this.embeds[t]},this.renameListener=(t,i)=>{this.sendEvent("renameObject",t,i)},this.isSyncingViewState=0,this.stopSyncViewState=()=>{this.isSyncingViewState=0},this._flushViewState=()=>{const{invXscale:t,invYscale:i,xMin:e,yMin:s}=JSON.parse(this.api.getViewProperties(0)),r=1/t,n=-e/t,h=-s/i;return this.viewState={scale:r,x:n,y:h},this.viewSyncCallback=0,this.viewState},this.clientListener=t=>{let i,e;const s=t.type;switch(s){case"updateStyle":i=t.target,e=this.api.getXML(i),this.sendEvent("evalXML",e);break;case"editorStart":this.lastEditingLabel=t.target;break;case"editorKeyTyped":e=this.api.getEditorState(),this.sendEvent("setEditorState",e,this.lastEditingLabel);break;case"editorStop":this.lastEditingLabel=void 0,this.sendEvent("setEditorState",JSON.stringify({content:""}));break;case"deselect":this.sendEvent("deselect",t.target);break;case"select":this.sendEvent("select",t.target);break;case"embeddedContentChanged":i=t[1],e=t[2],this.sendEvent("embeddedContentChanged",e,i);break;case"undo":case"redo":case"addPolygonComplete":e=this.api.getXML(),this.sendEvent("setXML",e);break;case"addSlide":this.sendEvent(s);break;case"removeSlide":case"moveSlide":case"selectSlide":case"clearSlide":case"orderingChange":e=t[2],this.sendEvent(s,e);break;case"pasteSlide":({cardIdx:e,ggbFile:i}=t),this.sendEvent(s,e,i);break;case"startAnimation":i=t[1],this.currentAnimations.push(i),this.sendEvent(s,i,i);break;case"stopAnimation":i=t[1],this.currentAnimations.splice(this.currentAnimations.indexOf(i),1),this.sendEvent(s,i,i);break;case"groupObjects":case"ungroupObjects":e=t.targets,this.sendEvent(s,e);break;case"pasteElmsComplete":e=t.targets.map(r=>this.api.getXML(r)).join(""),this.sendEvent("evalXML",e);break;case"addGeoToTV":case"removeGeoFromTV":e=t[1],this.sendEvent(s,e);break;case"setValuesOfTV":e=t[2],this.sendEvent(s,e);break;case"showPointsTV":({column:e,show:i}=t),this.sendEvent(s,e,i);break;case"lockTextElement":case"unlockTextElement":e=t[1],this.sendEvent(s,e);break;case"viewChanged2D":this.viewSyncCallback||(this.isSyncingViewState||this.viewState.scale===0?this.viewSyncCallback=setTimeout(this._flushViewState,this.delay):this.viewSyncCallback=setTimeout(this._sendViewSyncEvent,this.delay));break;case"mouseDown":case"deleteGeos":case"dragEnd":break;default:console.debug("[GeoGebra] unhandled event ",t.type,t)}},this.viewSyncCallback=0,this.viewState={scale:0,x:0,y:0},this._sendViewSyncEvent=()=>{this._flushViewState(),this.sendEvent("viewChanged2D",JSON.stringify(this.viewState)),this.viewSyncCallback=0},this._delayedRegisterListeners=()=>{this.registerListeners(),this.viewSyncCallback=0},this.conflictedObjects=[],this.dispatch=t=>{var h,p;if(this.conflictedObjects.includes(t.label)&&t.type!=="conflictResolution")return;const e=t.embedLabel?this.embeds[t.embedLabel]:this,s=t.type,r=t.label,n=t.content;if(console.debug("[GeoGebra] receive:",s,r,n),s==="addObject")if(e.api.exists(r))if(this.context.isDecider)if(this.context.isDecider(this.clientId)){let o=1,c;do c=`${r}_${o}`,o++;while(e.api.exists(c));this.unregisterListeners(),e.api.renameObject(r,c),this.registerListeners();const d=e.api.getAlgorithmXML(c)||e.api.getXML(c);this.sendEvent("conflictResolution",d,r)}else this.conflictedObjects.push(r);else e.evalXML(n),e.api.previewRefresh();else e.evalXML(n),e.api.previewRefresh();else if(s==="conflictResolution"){const o=this.conflictedObjects.indexOf(r);o!==-1&&this.conflictedObjects.splice(o,1),e.evalXML(n),e.api.previewRefresh()}else if(s==="evalXML")e.evalXML(n),e.api.previewRefresh();else if(s==="setXML")e.setXML(n);else if(s==="evalCommand")e.evalCommand(n),e.api.previewRefresh();else if(s==="deleteObject")e.unregisterListeners(),e===this&&delete this.embeds[n],e.api.deleteObject(n),e.registerListeners();else if(s==="setEditorState")e.unregisterListeners(),e.api.setEditorState(n,r),e.registerListeners();else if(s==="addImage"){const o=JSON.parse(n);e.api.addImage(o.fileName,o.fileContent)}else if(["addSlide","removeSlide","moveSlide","clearSlide"].includes(s))e.api.handleSlideAction(s,n);else if(s==="selectSlide")e.unregisterListeners(),e.api.selectSlide(n),e.registerListeners();else if(s==="renameObject")e.unregisterListeners(),e.api.renameObject(n,r),e.registerListeners();else if(s==="pasteSlide")e.api.handleSlideAction(s,n,r);else if(s==="evalGMContent"){const o=(e.api.getEmbeddedCalculators(!0)||{})[r];o&&o.loadFromJSON(n)}else if(s==="startAnimation")e.api.setAnimating(r,!0),e.api.startAnimation();else if(s==="stopAnimation")e.api.setAnimating(r,!1);else if(s==="select"){if(n){const o=((p=(h=this.context).getColor)==null?void 0:p.call(h,t.clientId))||"#80808080";e.api.addMultiuserSelection(String(t.nickName),o,n,!!r)}}else if(s==="deselect")e.api.removeMultiuserSelections(String(t.nickName));else if(s==="orderingChange")e.api.updateOrdering(n);else if(s==="groupObjects")e.api.groupObjects(n);else if(s==="ungroupObjects")e.api.ungroupObjects(n);else if(s==="addToGroup")e.api.addToGroup(n,r);else if(s==="embeddedContentChanged")e.api.setEmbedContent(r,n);else if(s==="addGeoToTV")e.api.addGeoToTV(n);else if(s==="setValuesOfTV")e.api.setValuesOfTV(n);else if(s==="removeGeoFromTV")e.api.removeGeoFromTV(n);else if(s==="showPointsTV")e.api.showPointsTV(n,r);else if(s==="lockTextElement")e.api.lockTextElement(n);else if(s==="unlockTextElement")e.api.unlockTextElement(n);else if(s==="viewChanged2D")if(e.viewState.scale===0)e.api.evalCommand("Pan(0,0)"),e.startSyncViewState();else{const{scale:o,x:c,y:d}=JSON.parse(n),g=e._flushViewState();e.startSyncViewState(),e.api.evalCommand(`Pan(${c-g.x},${d-g.y})`),e.api.evalCommand(`ZoomIn(${o/g.scale})`)}else console.debug("[GeoGebra] unknown event",s,n,r)},this.api=a.api,this.clientId=a.clientId,this.nickName=a.nickName,this.delay=(l=a.delay)!=null?l:200,this.context=a,setTimeout(()=>{this.api.evalCommand("Pan(0,0)")},this.delay)}createEvent(a,l,t){const i={type:a,content:l,clientId:this.clientId,nickName:this.nickName};return this.context.embedLabel&&(i.embedLabel=this.context.embedLabel),t&&(i.label=t),i}sendEvent(a,l,t){console.log("[GeoGebra] send:",a,t,l),this.context.postMessage(this.createEvent(a,l,t)),this.storageCallback||(this.storageCallback=setTimeout(()=>{this.context.save(this.api.getBase64()),this.storageCallback=0},this.delay))}evalCommand(a){this.unregisterListeners(),this.api.evalCommand(a),this.registerListeners()}evalXML(a){this.unregisterListeners(),this.api.evalXML(a),this.api.updateConstruction(),this.registerListeners(),setTimeout(this.initAllEmbeds,500)}setXML(a){this.unregisterListeners(),this.api.setXML(a),this.api.updateConstruction(),this.registerListeners()}initEmbed(a){if(this.embeds[a])return;const l=this.api.getEmbeddedCalculators();if(!l)return;const t=l[a];if(t&&"registerClientListener"in t){const i=new L({...this.context,clientId:this.clientId,nickName:this.nickName,api:t,embedLabel:a});i.registerListeners(),this.embeds[a]=i}}startSyncViewState(){clearTimeout(this.isSyncingViewState),this.isSyncingViewState=setTimeout(this.stopSyncViewState,1e3)}shouldSyncView(a,l,t,i){return Math.abs(l-a.scale)>L.Threshold/10||Math.abs(t-a.x)>L.Threshold||Math.abs(i-a.y)>L.Threshold}registerListeners(){this.api.registerUpdateListener(this.updateListener),this.api.registerRemoveListener(this.removeListener),this.api.registerAddListener(this.addListener),this.api.registerClientListener(this.clientListener),this.api.registerRenameListener(this.renameListener)}unregisterListeners(){this.api.unregisterUpdateListener(this.updateListener),this.api.unregisterRemoveListener(this.removeListener),this.api.unregisterAddListener(this.addListener),this.api.unregisterClientListener(this.clientListener),this.api.unregisterRenameListener(this.renameListener)}};let M=L;M.Threshold=20;var I=(()=>`.netless-app-geogebra{width:100%!important;height:100%!important;overflow:hidden}.netless-app-geogebra.loading{background-color:#fff}.netless-app-geogebra.readonly{user-select:none;pointer-events:none}
`)();function V(a,l){const t=new ResizeObserver(()=>l(a));return t.observe(a),()=>t.disconnect()}function x(a,l,t){const i=a.displayer,e=a.room;let s=[];const r=o=>{o.authorId!==i.observerId&&s.forEach(c=>c(o.payload))},n="sync--"+a.appId;return i.addMagixEventListener(n,r),{service:{addListener(o){s.push(o)},postMessage(o){e==null||e.dispatchMagixEvent(n,o)},load(){return l[t]},save(o){a.updateAttributes([t],o)}},disposer:()=>{s=[],i.removeMagixEventListener(n)}}}const R={kind:"GeoGebra",config:{enableShadowDOM:!1},async setup(a){var E,y;const l=a.displayer,t=l.observerId,i=(E=l.state.roomMembers.find(m=>m.memberId===t))==null?void 0:E.payload,e=(i==null?void 0:i.uid)||"",s=(i==null?void 0:i.nickName)||e,r=(y=a.getAppOptions())==null?void 0:y.HTML5Codebase,n=T(a,{uid:"",ggbBase64:""}),h=a.box;h.mountStyles(I);const p=document.createElement("div");p.classList.add("netless-app-geogebra","loading"),e!==n.uid&&n.uid&&p.classList.add("netless-app-geogebra","readonly"),h.mountContent(p);const o=new G,c={...j};c.language=navigator.language.startsWith("zh")?"zh":"en",n.ggbBase64&&(c.ggbBase64=n.ggbBase64),c.id="ggb_"+a.appId;let d;const g=x(a,n,"ggbBase64");function S(){const{width:m,height:u}=p.getBoundingClientRect();d==null||d.setWidth(m),d==null||d.setHeight(u)}c.appletOnLoad=m=>{console.log(`[GeoGebra]: loaded ${JSON.stringify(c.id)}`),d=m,S(),p.classList.remove("loading");const u=a.displayer,C=new M({clientId:u.observerId,nickName:s,api:m,isDecider:b=>u.state.roomMembers.map(f=>f.memberId).every(f=>b<=f),getColor:b=>{const k=u.memberState(b).strokeColor;return"#"+k.map(f=>f.toString(16).padStart(2,"0")).join("")+"80"},...g.service});C.registerListeners(),g.service.addListener(b=>{C.dispatch(b),d==null||d.setUndoPoint()})},o.add(()=>V(p,S)),a.emitter.on("destroy",()=>{console.log("[GeoGebra]: destroy"),o.flushAll(),g.disposer(),d==null||d.remove()});const O=await A(r),w=new O(c);r&&w.setHTML5Codebase(r),w.inject(p)}};export{R as default};
